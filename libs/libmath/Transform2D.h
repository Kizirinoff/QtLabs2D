#pragma once
#include <glm/fwd.hpp>
#include <glm/vec2.hpp>

namespace math
{

// Преобразует координаты из локальных в мировые в следующем порядке:
//  - сначала вершины масштабируются
//    например, единичный круг может превратиться в эллипс
//  - затем поворачиваются
//    т.е. фигуры ориентируются на плоскости
//  - затем переносятся
//    т.е. задаётся положение тела
// изменив порядок, мы изменили бы значение трансформаций.
struct Transform2D
{
public: // Позиция фигуры относительно центра мира.
	glm::vec2 position{ 0, 0 };

	// Угол собственного поворота фигуры в радианах.
	float orientation{ 0 };

	// Множители размера фигуры по двум осям.
	glm::vec2 size{ 1, 1 };

	// Добавляет вращение на заданное число радиан.
	void rotateBy(float radians);

	// Добавляет масштабирование с указанными множителями масштабирования для двух осей.
	void scaleBy(const glm::vec2 &scale);

	// Добавляет масштабирование с указанным множителем масштабирования.
	void scaleBy(const float scale);

	// Добавляет перемещение на указанное расстояние.
	void moveBy(const glm::vec2 &distance);

	// Создаёт матрицу 3x3 для выполнения аффинного преобразования, эквивалентного текущему состоянию класса.
	glm::mat3 toMat3() const;

	// Создаёт матрицу 4x4 для выполнения аффинного преобразования, эквивалентного текущему состоянию класса.
	glm::mat4 toMat4() const;
};

} // namespace math
